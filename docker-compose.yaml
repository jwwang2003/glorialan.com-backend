services:
  backend:
    container_name: backend
    restart: always
    build:
      dockerfile: ./docker/nodejs.Dockerfile
      context: .
      target: dev
    volumes:
     - ./src:/app/src
    ports:
      - 8000:8000
    env_file:
      - .env
    networks:
      - gloria-net
  
  # NGINX PROXY CONFIGURATION
  nginx:
    container_name: nginx
    profiles:
      - nginx     # Only need to run NGINX on the server
    restart: always
    image: nginx:latest
    volumes:
        # - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        # - ./certbot/conf:/etc/letsencrypt
        # - ./certbot/www:/var/www/certbot
        - static:/usr/share/nginx/html  # Static HTML (used for error pages?)
        - nginx:/etc/nginx              # Nginx configs
        # - certbot-etc:/etc/letsencrypt  # Things generated by certbot
        # - certbot-www:/var/www/certbot  
        - ssl:/etc/ssl                  # SSL certificates
    ports:
      - "80:80"
      - "443:443"
    networks:
      - gloria-net

  # No need for certbox b.c. Cloudflare offers SSL
  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   networks:
  #     - gloria-net
  #   volumes:
  #     - certbot-www:/var/www/certbot
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     # - ./certbot/conf:/etc/letsencrypt
  #     # - ./certbot/www:/var/www/certbot
  #   command: certonly --webroot -w /var/www/certbot --email gls@glorialan.com --agree-tos --no-eff-email --staging -d glorialan.com  -d www.glorialan.com

volumes:
  # Note that the directories for the binded volumes must be present!
  # Docker would not automatically create those directories
  root:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./src
  ssl:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./docker/ssl
  static:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./docker/html
  nginx:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./docker/nginx

networks:
  gloria-net:
    # driver: bridge
    name: gloria-net
    external: true