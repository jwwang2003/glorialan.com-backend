services:
  backend:
    build:
      dockerfile: ./docker/nodejs.Dockerfile
      context: .
      target: dev
    volumes:
      - root:/app/src
    expose:
      - 8000
    ports:
      - 8000:8000
    env_file:
      - .env
    restart: always
    networks:
      - gloria-net

  db:
    image: postgres
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    ports:
      - 5432:${PG_PORT}
    environment:
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_NAME}
    networks:
      - gloria-net
  
  redis_cache:
    image: redis
    restart: always
    ports:
      - 6379:${REDIS_PORT}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes: 
      - redis:/data
    networks:
      - gloria-net

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:${MONGO_PORT}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    networks:
      - gloria-net
  
  # Management panels
  # Management panels are available at 8080 and 8081 (DO NOT FORWARD THESE PORTS)
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:${ADMINER_PORT}
    networks:
      - gloria-net
  
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:${MONGO_EXPRESS_PORT}
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH: true
    networks:
      - gloria-net
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    networks:
      - gloria-net
    volumes:
      - certbot-www:/var/www/certbot
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      # - ./certbot/conf:/etc/letsencrypt
      # - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --email gls@glorialan.com --agree-tos --no-eff-email --staging -d glorialan.com  -d www.glorialan.com

volumes:
  certbot-www:
  certbot-etc:
  certbot-var:

  postgres:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./docker_data/db
  
  redis:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./docker_data/redis_cache

  root:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./src

networks:
  gloria-net:
    driver: bridge
    name: gloria-net